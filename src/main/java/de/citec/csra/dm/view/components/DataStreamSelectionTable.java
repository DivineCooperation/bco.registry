/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.citec.csra.dm.view.components;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mpohling
 */
public class DataStreamSelectionTable extends javax.swing.JPanel {

	/**
	 * Creates new form DataStreamSelectionTable
	 */
	public DataStreamSelectionTable() {
		initComponents();
		updateDynamicComponents(null, null);
	}

	private void updateDynamicComponents(final Collection<String> dataStreamSelectedList, final Collection<String> dataStreamSourceList) {
		boolean dataAvailable = dataStreamSelectedList != null && dataStreamSourceList != null;

		if (dataAvailable) {
			generateTableData((DefaultTableModel) table.getModel(), dataStreamSelectedList, dataStreamSourceList);
		} else {
			((DefaultTableModel) table.getModel()).getDataVector().clear();
		}
		
		revalidate();
		updateUI();
		table.setEnabled(dataAvailable);
	}

	private void generateTableData(final DefaultTableModel model, final Collection<String> dataStreamSelectedList, final Collection<String> dataStreamSourceList) {
		model.getDataVector().clear();
		Object[] dataEntry = new Object[2];
		for (String dataStream : dataStreamSourceList) {
			dataEntry[0] = dataStream;
			dataEntry[1] = dataStreamSelectedList.contains(dataStream);
			model.addRow(dataEntry);
		}
	}

	public void load(final Collection<String> dataStreamSelectedList, final Collection<String> dataStreamSourceList) {
		updateDynamicComponents(dataStreamSelectedList, dataStreamSourceList);
	}

	public List<String> getDataStreamSelectionList() {
		List<String> dataStreamSelectedList = new ArrayList<String>();

		int size = table.getRowCount();
		String dataStream;
		Boolean selected;
		for (int i = 0; i < size; i++) {
			dataStream = (String) table.getValueAt(i, 0);
			selected = (Boolean) table.getValueAt(i, 1);

			if (selected) {
				dataStreamSelectedList.add(dataStream);
			}
		}
		return dataStreamSelectedList;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "DataStream", "Supported"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowSelectionAllowed(false);
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
